#! /usr/bin/env dcli

import 'dart:io';

import 'package:dcli/dcli.dart';

/// dcli script generated by:
/// dcli create hog.dart
///
/// See
/// https://pub.dev/packages/dcli#-installing-tab-
///
/// For details on installing dcli.
///

void main(List<String> args) {
  find('.git', includeHidden: true, types: [Find.directory]).forEach((gitPath) {
    var repoDir = dirname(gitPath);
    // print('Considering $repoDir');
    var remote = 'git remote -v'
        .start(workingDirectory: repoDir, progress: Progress.capture())
        .toList()
        .first;
    remote = remote.replaceAll(RegExp(r'\s+'), ' ');

    if (remote.contains('bitbucket')) {
      print(blue('remote $remote'));
      var parts = remote.split(' ');
      if (parts.length != 3) {
        printerr('Unexpected response: $remote');
        exit(1);
      }

      print('parts 1 ${parts[1]}');
      var repoParts = parts[1].split(':');
      if (repoParts.length != 2) {
        printerr('Unexpected response: ${parts[1]}');
        exit(1);
      }
      if (!repoParts[1].contains('noojee/')) {
        printerr(red("Skipping $remote as it isn't on the Noojee repo"));
      } else {
        var repo = basenameWithoutExtension(repoParts[1]);

        print(orange(
            'updating remote for $repoDir to git@github.com:noojee/$repo.git'));

        'git remote set-url origin git@github.com:noojee/$repo.git'
            .start(workingDirectory: repoDir, progress: Progress.print());
        'git pull'.start(workingDirectory: repoDir, progress: Progress.print());
        'git push'.start(workingDirectory: repoDir, progress: Progress.print());
      }
    } else {
      // print(blue('Skipping $repoDir'));
    }
  });
}
